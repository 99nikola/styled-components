{"version":3,"sources":["rules/index.js","utils/index.js","components/styled/components/Button.js","components/styled/components/Container.styled.js","components/styled/components/FlexContainer.js","components/styled/components/GlobalStyles.js","components/styled/components/Header3.js","components/styled/components/InfoText.js","components/styled/components/Input.js","components/styled/components/Label.styled.js","components/styled/components/InputLabel.js","components/styled/components/Placeholder.js","components/styled/components/RadioButton.styled.js","components/organisms/CreditCardForm.js","components/organisms/PaypalForm.js","components/templates/PaymentMethods.js","App.js","index.js"],"names":["requiredRule","required","creditCardRule","validate","checkLuhn","cardNumber","input","trim","number","Number","parseInt","isInteger","isNaturalNumber","sum","remainder","length","i","digit","luhn","creditExpirationRule","pattern","value","message","creditCvvRule","Button","styled","button","theme","colors","primary","border","margin","Container","div","background","FlexContainer","direction","justify","align","GlobalStyles","createGlobalStyle","Header3","h3","heading","InfoText","text","Input","forwardRef","ref","errorMessage","width","other","StyledInput","className","Label","label","InputLabel","Placeholder","RadioButton","CreditCardForm","onSubmit","onError","handlePaymentChange","paymentMethod","form","useForm","mode","defaultValues","cardExpiration","cardHolder","cardCVV","SubmitButton","useMemo","EPaymentMethods","creditCard","type","name","id","defaultChecked","onChange","e","target","checked","htmlFor","handleSubmit","control","rules","render","field","fieldState","aria-invalid","Boolean","error","memo","PaypalForm","email","paypal","placeholder","data","console","log","PaymentMethods","useState","setPaymentMethod","useCallback","payMethod","App","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ec0f49b6.chunk.js","sourcesContent":["import { checkLuhn } from \"../utils\"\r\n\r\nexport const requiredRule = {\r\n    required: \"Required\"\r\n}\r\n\r\nexport const creditCardRule = {\r\n    ...requiredRule,\r\n    validate: {\r\n        checkLuhn: checkLuhn\r\n    }\r\n}\r\n\r\nexport const creditExpirationRule = {\r\n    ...requiredRule,\r\n    pattern: {\r\n        value: /^(0?[1-9]|1[0-2])\\/?([0-9]{4}|[0-9]{2})$/,\r\n        message: \"Invalid format.\"\r\n    }\r\n}\r\n\r\nexport const creditCvvRule = {\r\n    ...requiredRule,\r\n    pattern: {\r\n        value: /^[0-9]{3}|[0-9]{4}$/,\r\n        message: \"Inavild format.\"\r\n    }\r\n}","export function isNaturalNumber(input) {\r\n    const number = Number.parseInt(input);\r\n\treturn (Number.isInteger(number) && number > 0);\r\n}\r\n\r\nexport function checkLuhn (cardNumber) {\r\n    const input = cardNumber.trim();\r\n    if (!isNaturalNumber(input)) \r\n        return \"Invalid credit card number\";\r\n\r\n    let sum = 0;\r\n    let remainder = (input.length-1) % 2;\r\n\r\n    for (let i=input.length-1; i>=0; i--) {\r\n        let digit = Number.parseInt(input[i]);\r\n        if (i % 2 === remainder) {\r\n            digit *= 2;\r\n            if (digit >= 10) \r\n                digit -= 9;\r\n        } \r\n        sum += digit;\r\n    }\r\n\r\n    const luhn = sum % 10;    \r\n    if (luhn !== 0)\r\n        return `Warning: Next check digit: ${10 - luhn}`;\r\n        \r\n    return true;\r\n}","import styled from \"styled-components\";\r\n\r\nconst Button = styled.button`\r\n    width: 140px;\r\n    height: 50px;\r\n    background-color: ${({ theme }) => theme.colors.primary};\r\n    border-radius: 100px;\r\n\r\n    font-weight: 500;\r\n    font-size: 18px;\r\n    line-height: 26px;\r\n    color: #FFFFFF;\r\n\r\n    border: none;\r\n\r\n    &:active {\r\n        border: 1px solid ${({ theme }) => theme.colors.border};\r\n    }\r\n\r\n    margin: ${({ margin }) => margin || \"0\"};\r\n`;\r\n\r\n\r\nexport default Button;","import styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n    background-color: ${({ theme }) => theme.colors.background};\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: space-around;\r\n\r\n    max-width: 1400px;\r\n    max-height: 970px;\r\n`;\r\n\r\nexport default Container;\r\n","import styled from \"styled-components\";\r\n\r\nconst FlexContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: ${({ direction }) => direction || \"row\"};\r\n    justify-content: ${({ justify }) => justify || \"flex-start\"};\r\n    align-items: ${({ align }) => align || \"flex-start\"};\r\n    margin: ${({ margin }) => margin || \"0\"};\r\n    border: ${({ border }) => border || \"0\"};\r\n`;\r\n\r\nexport default FlexContainer;\r\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nconst GlobalStyles = createGlobalStyle`\r\n    * {\r\n        font-family: DM Sans, sans-serif !important;\r\n    }\r\n    #root {\r\n        display: flex;\r\n        height: 100%;\r\n        width: 100%;\r\n        display: flex;\r\n        justify-content: center;\r\n    }\r\n`;\r\n\r\nexport default GlobalStyles;","import styled from \"styled-components\";\r\n\r\nconst Header3 = styled.h3`\r\n    color: ${({ theme }) => theme.colors.heading};\r\n    font-weight: 700;\r\n    font-style: normal;\r\n    font-size: 42px;\r\n    line-height: 52px;\r\n    letter-spacing: -0.4px;\r\n\r\n    margin: 20px 0;\r\n`;\r\n\r\nexport default Header3;","import styled from \"styled-components\";\r\n\r\n\r\nconst InfoText = styled.div`\r\n    font-weight: normal;\r\n    font-size: 16px;\r\n    line-height: 26px;\r\n    color: ${({ theme }) => theme.colors.text};\r\n    padding: 0 0 30px 0;\r\n`;\r\n\r\nexport default InfoText;","import { forwardRef } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Input = forwardRef(({ errorMessage, width, ...other}, ref) => {\r\n    return (\r\n        <StyledInput width={width}>\r\n            <input {...other}  ref={ref}/>\r\n            <p className=\"error-message\">{errorMessage}</p>\r\n        </StyledInput>\r\n    )\r\n});\r\n\r\nconst StyledInput = styled.div`\r\n    & > input {\r\n        width: ${({ width }) => width || \"370px\"};\r\n        height: 50px;\r\n\r\n        mix-blend-mode: normal;\r\n        border: 2px solid ${({ theme }) => theme.colors.border};\r\n        box-sizing: border-box;\r\n        border-radius: 100px;\r\n\r\n        font-weight: 500;\r\n        font-size: 18px;\r\n        line-height: 26px;\r\n\r\n        padding-left: 24px;\r\n\r\n        color: rgba(21, 20, 57, 0.4);\r\n    }\r\n\r\n    & > input:focus {\r\n        outline: 2px solid ${({ theme }) => theme.colors.heading};\r\n    }\r\n\r\n    & > input[aria-invalid=\"true\"] {\r\n        outline: 2px solid red;\r\n    }\r\n\r\n    & .error-message {\r\n        color: red;\r\n        margin: 2px 0 2px 20px;\r\n    }\r\n`;\r\n\r\n\r\nexport default Input;","import styled from \"styled-components\";\r\n\r\n\r\nconst Label = styled.label`\r\n    color: ${({ theme }) => theme.colors.heading};\r\n    font-weight: 500;\r\n    font-size: 18px;\r\n    cursor: pointer;\r\n    padding: 5px 0;\r\n`;\r\n\r\nexport default Label;","import styled from \"styled-components\";\r\nimport Label from \"./Label.styled\";\r\n\r\nconst InputLabel = styled(Label)`\r\n    font-weight: 700;\r\n    font-size: 14px;\r\n    line-height: 26px;\r\n\r\n    letter-spacing: 2px;\r\n    text-transform: uppercase;\r\n`;\r\n\r\nexport default InputLabel;","import styled from \"styled-components\";\r\n\r\n\r\nconst Placeholder = styled.div`\r\n    background-color: ${({ theme }) => theme.colors.background};\r\n    width: 100%;\r\n\r\n    border: 2px solid #EBEAED;\r\n    box-sizing: border-box;\r\n    border-radius: 10px;\r\n\r\n    display: flex;\r\n    padding: 30px;\r\n    margin: 10px 0;\r\n\r\n    &:focus-within {\r\n        border-color: ${({ theme }) => theme.colors.primary};\r\n    }\r\n`;\r\n\r\nexport default Placeholder;","import styled from \"styled-components\";\r\n\r\n\r\nconst RadioButton = styled.input`\r\n    width: 20px;\r\n    height: 20px;\r\n    background-color: ${({ theme }) => theme.colors.background};\r\n\r\n    -webkit-appearance: none;\r\n    appearance: none;\r\n\r\n    font: inherit;\r\n    border: 2px solid ${({ theme }) => theme.colors.border};\r\n    box-sizing: border-box;\r\n    border-radius: 23px;\r\n\r\n    display: grid;\r\n    place-content: center;\r\n\r\n    &::before {\r\n        content: \"\";\r\n        width: 12px;\r\n        height: 12px;\r\n        border-radius: 50%;\r\n        transform: scale(0);\r\n        transition: 120ms transform ease-in-out;\r\n        box-shadow: inset 1em 1em var(--form-control-color);\r\n        background-color: ${({ theme }) => theme.colors.heading};\r\n        outline: 4px solid #25DAC5;\r\n    }\r\n\r\n    &:checked::before {\r\n        transform: scale(1);\r\n    }\r\n`;\r\n\r\nexport default RadioButton;","import { memo, useMemo } from \"react\";\r\nimport { Controller, useForm } from \"react-hook-form\";\r\nimport { requiredRule, creditCardRule, creditExpirationRule, creditCvvRule } from \"../../rules\";\r\nimport { Button, FlexContainer, InfoText, Input, InputLabel, Label, Placeholder, RadioButton } from \"../styled\";\r\nimport { EPaymentMethods } from \"../templates/PaymentMethods\";\r\n\r\nconst CreditCardForm = ({ onSubmit, onError, handlePaymentChange, paymentMethod }) => {\r\n\r\n    const form = useForm({\r\n        mode: \"onChange\",\r\n        defaultValues: {\r\n            cardNumber: \"\",\r\n            cardExpiration: \"\",\r\n            cardHolder: \"\",\r\n            cardCVV: \"\"\r\n        }\r\n    });\r\n\r\n    const SubmitButton = useMemo(() => (\r\n        paymentMethod === EPaymentMethods.creditCard && (\r\n            <Button \r\n                margin=\"0 0 0 20px\"\r\n                type=\"submit\"\r\n                >\r\n                Checkout\r\n            </Button>\r\n    )), [paymentMethod]);\r\n\r\n    const handleChange = (e) => {\r\n        if (e.target.checked)\r\n            handlePaymentChange(EPaymentMethods.creditCard);\r\n    }\r\n\r\n    return (\r\n        <Placeholder>\r\n            <RadioButton \r\n                type=\"radio\"\r\n                name=\"payment-method\"\r\n                id=\"credit-card\"\r\n                defaultChecked\r\n                onChange={handleChange}\r\n                />\r\n            <FlexContainer direction=\"column\">\r\n                <Label htmlFor=\"credit-card\">Credit Card</Label>\r\n\r\n                <InfoText>\r\n                    Safe money transfer using your bank account.\r\n                </InfoText>\r\n\r\n                <form onSubmit={form.handleSubmit(onSubmit, onError)}>\r\n                    <FlexContainer>\r\n                        <FlexContainer direction=\"column\" margin=\"20px 20px 20px 0\">\r\n                            <InputLabel htmlFor=\"card-number\">Credit card number</InputLabel>\r\n                            <Controller\r\n                                name=\"cardNumber\"\r\n                                control={form.control}\r\n                                rules={creditCardRule}\r\n                                render={({ field, fieldState }) => (\r\n                                    <Input \r\n                                        {...field}\r\n                                        id=\"card-number\"\r\n                                        aria-invalid={Boolean(fieldState.error)}\r\n                                        errorMessage={fieldState.error?.message}\r\n                                    />\r\n                                )}\r\n                            />\r\n                        </FlexContainer>\r\n                        \r\n                        <FlexContainer direction=\"column\" margin=\"20px 20px 20px 0\">\r\n                            <InputLabel htmlFor=\"card-expiration\">Expiration</InputLabel>\r\n                            <Controller \r\n                                name=\"cardExpiration\"\r\n                                control={form.control}\r\n                                rules={creditExpirationRule}\r\n                                render={({ field, fieldState }) => (\r\n                                    <Input \r\n                                        {...field}\r\n                                        id=\"card-expiration\"\r\n                                        aria-invalid={Boolean(fieldState.error)}\r\n                                        errorMessage={fieldState.error?.message}\r\n                                    />\r\n                                )}\r\n                                />\r\n                        </FlexContainer>\r\n                    </FlexContainer>\r\n                    <FlexContainer>\r\n                        <FlexContainer direction=\"column\" margin=\"20px 20px 20px 0\">\r\n                            <InputLabel htmlFor=\"card-holder\">Cardholder name</InputLabel>\r\n                            <Controller  \r\n                                name=\"cardHolder\"\r\n                                control={form.control}\r\n                                rules={requiredRule}\r\n                                render={({ field, fieldState }) => (\r\n                                    <Input \r\n                                        {...field}\r\n                                        id=\"card-holder\"\r\n                                        aria-invalid={Boolean(fieldState.error)}\r\n                                        errorMessage={fieldState.error?.message}\r\n                                    />\r\n                                )}\r\n                                />\r\n                        </FlexContainer>\r\n                        \r\n                        <FlexContainer align=\"flex-start\" margin=\"20px 20px 20px 0\">\r\n                            <FlexContainer direction=\"column\">\r\n                                <InputLabel htmlFor=\"card-cvv\">Cvv code</InputLabel>\r\n                                <Controller \r\n                                    name=\"cardCVV\"\r\n                                    control={form.control}\r\n                                    rules={creditCvvRule}\r\n                                    render={({ field, fieldState }) => (\r\n                                        <Input\r\n                                            {...field} \r\n                                            id=\"card-cvv\"\r\n                                            width=\"100px\"\r\n                                            aria-invalid={Boolean(fieldState.error)}\r\n                                            errorMessage={fieldState.error?.message}\r\n                                        />\r\n                                )}\r\n                                />\r\n                            </FlexContainer>\r\n                            <FlexContainer margin=\"33px 0 0 0\">\r\n                                {SubmitButton}\r\n                            </FlexContainer>\r\n                        </FlexContainer>\r\n                    </FlexContainer>\r\n                </form>\r\n            </FlexContainer>\r\n        </Placeholder>\r\n    );\r\n}\r\n\r\nexport default memo(CreditCardForm);\r\n","import { memo, useMemo } from \"react\";\r\nimport { Controller, useForm } from \"react-hook-form\";\r\nimport { requiredRule } from \"../../rules\";\r\nimport { RadioButton, Placeholder, FlexContainer, Label, InfoText, Input, Button } from \"../styled\";\r\nimport { InputField } from \"../styled/components/Input\";\r\nimport { EPaymentMethods } from \"../templates/PaymentMethods\";\r\n\r\nconst PaypalForm = ({ onSubmit, onError, handlePaymentChange, paymentMethod }) => {\r\n\r\n    const form = useForm({\r\n        mode: \"onChange\",\r\n        defaultValues: {\r\n            email: \"\"\r\n        }\r\n    });\r\n\r\n    const SubmitButton = useMemo(() => (\r\n        paymentMethod === EPaymentMethods.paypal && (\r\n            <Button \r\n                margin=\"0 0 0 20px\"\r\n                type=\"submit\"\r\n                >\r\n                Checkout\r\n            </Button>\r\n    )), [paymentMethod]);\r\n\r\n    const handleChange = (e) => {\r\n        if (e.target.checked)\r\n            handlePaymentChange(EPaymentMethods.paypal);\r\n    }\r\n\r\n    return (\r\n        <Placeholder>\r\n            <RadioButton \r\n                type=\"radio\"\r\n                name=\"payment-method\"\r\n                id=\"paypal\"\r\n                onChange={handleChange}\r\n            />\r\n            <FlexContainer direction=\"column\">\r\n                <form onSubmit={form.handleSubmit(onSubmit, onError)}>\r\n                    <Label htmlFor=\"paypal\">Paypal</Label>\r\n                    \r\n                    <InfoText>\r\n                        Safe payment online. Credit card needed. PayPal account is not necessary.\r\n                    </InfoText>\r\n\r\n                    <FlexContainer direction=\"row\">\r\n                        <Controller \r\n                            name=\"email\"\r\n                            control={form.control}\r\n                            rules={requiredRule}\r\n                            render={({ field, fieldState }) => (\r\n                                <Input\r\n                                    {...field}\r\n                                    type=\"email\"\r\n                                    placeholder=\"Email address\"\r\n                                    aria-invalid={Boolean(fieldState.error)}\r\n                                    errorMessage={fieldState.error?.message}\r\n                                />\r\n                                )}\r\n                            />\r\n                        {SubmitButton}\r\n                    </FlexContainer>\r\n                </form>\r\n            </FlexContainer>\r\n        </Placeholder>\r\n    );\r\n}\r\n\r\nexport default memo(PaypalForm);\r\n","import { useCallback, useState } from \"react\";\r\nimport CreditCardForm from \"../organisms/CreditCardForm\";\r\nimport PaypalForm from \"../organisms/PaypalForm\";\r\nimport { Container, Header3 } from \"../styled\";\r\n\r\nexport const EPaymentMethods = {\r\n    paypal: 0,\r\n    creditCard: 1\r\n}\r\n\r\nconst onSubmit = (data) => {\r\n    console.log(\"Success: \", data);\r\n}\r\n\r\nconst onError = (error) => {\r\n    console.log(\"Error: \", error);\r\n}\r\n\r\nconst PaymentMethods = () => {\r\n\r\n    const [ paymentMethod, setPaymentMethod ] = useState(EPaymentMethods.creditCard);\r\n\r\n    const handlePaymentChange = useCallback((payMethod) => {\r\n        setPaymentMethod(payMethod);\r\n    }, []);\r\n\r\n    return (\r\n        <Container>\r\n            <Header3>\r\n                Choose Your Payment Method\r\n            </Header3>\r\n\r\n            <PaypalForm \r\n                onSubmit={onSubmit} \r\n                onError={onError}\r\n                handlePaymentChange={handlePaymentChange}\r\n                paymentMethod={paymentMethod}\r\n            />\r\n            <CreditCardForm \r\n                onSubmit={onSubmit} \r\n                onError={onError}\r\n                handlePaymentChange={handlePaymentChange}\r\n                paymentMethod={paymentMethod}\r\n            />\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default PaymentMethods;\r\n","import { ThemeProvider } from \"styled-components\";\nimport PaymentMethods from \"./components/templates/PaymentMethods\";\nimport { GlobalStyles } from \"./components/styled\";\n\nconst theme = {\n    colors: {\n        primary: \"#25DAC5\",\n        heading: \"#1E0E62\",\n        text: \"rgba(21, 20, 57, 0.4)\",\n        background: \"#FFFFFF\",\n        border: \"#EBEAED\"\n    }\n}\n\nconst App = () => {\n    return (\n        <ThemeProvider theme={theme}>\n            <GlobalStyles />\n            <PaymentMethods />\n        </ThemeProvider>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);"],"sourceRoot":""}