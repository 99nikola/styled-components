{"version":3,"sources":["components/styled/components/Button.js","components/styled/components/Container.styled.js","components/styled/components/FlexContainer.js","components/styled/components/GlobalStyles.js","components/styled/components/Header3.js","components/styled/components/InfoText.js","components/styled/components/Input.js","components/styled/components/Label.styled.js","components/styled/components/InputLabel.js","components/styled/components/Placeholder.js","components/styled/components/RadioButton.styled.js","components/PaymentMethods.js","App.js","index.js"],"names":["Button","styled","button","theme","colors","primary","border","margin","Container","div","background","FlexContainer","direction","justify","align","GlobalStyles","createGlobalStyle","Header3","h3","heading","InfoText","text","Input","input","props","width","Label","label","InputLabel","Placeholder","RadioButton","PaymentMethods","form","useForm","mode","defaultValues","email","cardNumber","cardExpiration","cardHolder","cardCVV","onSubmit","handleSubmit","data","console","log","error","type","name","id","onChange","e","htmlFor","control","render","field","fieldState","placeholder","App","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0f5dfb6c.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nconst Button = styled.button`\r\n    width: 140px;\r\n    height: 50px;\r\n    background-color: ${({ theme }) => theme.colors.primary};\r\n    border-radius: 100px;\r\n\r\n    font-weight: 500;\r\n    font-size: 18px;\r\n    line-height: 26px;\r\n    color: #FFFFFF;\r\n\r\n    border: none;\r\n\r\n    &:active {\r\n        border: 1px solid ${({ theme }) => theme.colors.border};\r\n    }\r\n\r\n    margin: ${({ margin }) => margin || \"0\"};\r\n`;\r\n\r\n\r\nexport default Button;","import styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n    background-color: ${({ theme }) => theme.colors.background};\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: space-around;\r\n\r\n    max-width: 1400px;\r\n    max-height: 970px;\r\n`;\r\n\r\nexport default Container;\r\n","import styled from \"styled-components\";\r\n\r\nconst FlexContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: ${({ direction }) => direction || \"row\"};\r\n    justify-content: ${({ justify }) => justify || \"flex-start\"};\r\n    align-items: ${({ align }) => align || \"flex-start\"};\r\n    margin: ${({ margin }) => margin || \"0\"};\r\n`;\r\n\r\nexport default FlexContainer;\r\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nconst GlobalStyles = createGlobalStyle`\r\n    * {\r\n        font-family: DM Sans, sans-serif !important;\r\n    }\r\n    #root {\r\n        display: flex;\r\n        height: 100%;\r\n        width: 100%;\r\n        display: flex;\r\n        justify-content: center;\r\n    }\r\n`;\r\n\r\nexport default GlobalStyles;","import styled from \"styled-components\";\r\n\r\nconst Header3 = styled.h3`\r\n    color: ${({ theme }) => theme.colors.heading};\r\n    font-weight: 700;\r\n    font-style: normal;\r\n    font-size: 42px;\r\n    line-height: 52px;\r\n    letter-spacing: -0.4px;\r\n\r\n    margin: 20px 0;\r\n`;\r\n\r\nexport default Header3;","import styled from \"styled-components\";\r\n\r\n\r\nconst InfoText = styled.div`\r\n    font-weight: normal;\r\n    font-size: 16px;\r\n    line-height: 26px;\r\n    color: ${({ theme }) => theme.colors.text};\r\n    padding: 0 0 30px 0;\r\n`;\r\n\r\nexport default InfoText;","import styled from \"styled-components\";\r\n\r\n\r\nconst Input = styled.input`\r\n    width: ${(props) => props.width || \"370px\"};\r\n    height: 50px;\r\n\r\n    mix-blend-mode: normal;\r\n    border: 2px solid ${({ theme }) => theme.colors.border};\r\n    box-sizing: border-box;\r\n    border-radius: 100px;\r\n\r\n    font-weight: 500;\r\n    font-size: 18px;\r\n    line-height: 26px;\r\n\r\n    padding-left: 24px;\r\n\r\n    color: rgba(21, 20, 57, 0.4);\r\n\r\n    &:focus {\r\n        outline: 2px solid ${({ theme }) => theme.colors.heading};\r\n    }\r\n`;\r\n\r\nexport default Input;","import styled from \"styled-components\";\r\n\r\n\r\nconst Label = styled.label`\r\n    color: ${({ theme }) => theme.colors.heading};\r\n    font-weight: 500;\r\n    font-size: 18px;\r\n    cursor: pointer;\r\n    padding: 5px 0;\r\n`;\r\n\r\nexport default Label;","import styled from \"styled-components\";\r\nimport Label from \"./Label.styled\";\r\n\r\nconst InputLabel = styled(Label)`\r\n    font-weight: 700;\r\n    font-size: 14px;\r\n    line-height: 26px;\r\n\r\n    letter-spacing: 2px;\r\n    text-transform: uppercase;\r\n`;\r\n\r\nexport default InputLabel;","import styled from \"styled-components\";\r\n\r\n\r\nconst Placeholder = styled.div`\r\n    background-color: ${({ theme }) => theme.colors.background};\r\n    width: 100%;\r\n\r\n    border: 2px solid #EBEAED;\r\n    box-sizing: border-box;\r\n    border-radius: 10px;\r\n\r\n    display: flex;\r\n    padding: 30px;\r\n    margin: 10px 0;\r\n\r\n    &:focus-within {\r\n        border-color: ${({ theme }) => theme.colors.primary};\r\n    }\r\n`;\r\n\r\nexport default Placeholder;","import styled from \"styled-components\";\r\n\r\n\r\nconst RadioButton = styled.input`\r\n    width: 20px;\r\n    height: 20px;\r\n    background-color: ${({ theme }) => theme.colors.background};\r\n\r\n    -webkit-appearance: none;\r\n    appearance: none;\r\n\r\n    font: inherit;\r\n    border: 2px solid ${({ theme }) => theme.colors.border};\r\n    box-sizing: border-box;\r\n    border-radius: 23px;\r\n\r\n    display: grid;\r\n    place-content: center;\r\n\r\n    &::before {\r\n        content: \"\";\r\n        width: 12px;\r\n        height: 12px;\r\n        border-radius: 50%;\r\n        transform: scale(0);\r\n        transition: 120ms transform ease-in-out;\r\n        box-shadow: inset 1em 1em var(--form-control-color);\r\n        background-color: ${({ theme }) => theme.colors.heading};\r\n        outline: 4px solid #25DAC5;\r\n    }\r\n\r\n    &:checked::before {\r\n        transform: scale(1);\r\n    }\r\n`;\r\n\r\nexport default RadioButton;","import { Controller, useForm } from \"react-hook-form\";\r\nimport { Button, Container, FlexContainer, Header3, InfoText, Input, InputLabel, Label, Placeholder, RadioButton } from \"./styled\";\r\n\r\nconst PaymentMethods = () => {\r\n\r\n    const form = useForm({\r\n        mode: \"onChange\",\r\n        defaultValues: {\r\n            email: \"\",\r\n            cardNumber: \"\",\r\n            cardExpiration: \"\",\r\n            cardHolder: \"\",\r\n            cardCVV: \"\"\r\n        }\r\n    });\r\n\r\n    const onSubmit = (data) => {\r\n        console.log(\"Success: \", data);\r\n    }\r\n\r\n    const onError = (error) => {\r\n        console.log(\"Error: \", error);\r\n    }\r\n\r\n    const handlePaymentChange = (e) => {\r\n        console.log(e);\r\n        \r\n    }\r\n\r\n    return (\r\n        <form onSubmit={form.handleSubmit(onSubmit, onError)}>\r\n            <Container>\r\n                <Header3>\r\n                    Choose Your Payment Method\r\n                </Header3>\r\n\r\n                <Placeholder>\r\n                    <RadioButton \r\n                        type=\"radio\"\r\n                        name=\"payment-method\"\r\n                        id=\"paypal\"\r\n                        onChange={handlePaymentChange}\r\n                        />\r\n                    <FlexContainer direction=\"column\">\r\n                        <Label htmlFor=\"paypal\">Paypal</Label>\r\n                        \r\n                        <InfoText>\r\n                            Safe payment online. Credit card needed. PayPal account is not necessary.\r\n                        </InfoText>\r\n\r\n                        <Controller \r\n                            name=\"email\"\r\n                            control={form.control}\r\n                            render={({ field, fieldState }) => (\r\n                                <Input\r\n                                    {...field}\r\n                                    type=\"email\"\r\n                                    placeholder=\"Email address\"\r\n                                    />\r\n                            )}\r\n                        />\r\n                        \r\n                    </FlexContainer>\r\n                </Placeholder>\r\n\r\n                <Placeholder>\r\n                    <RadioButton \r\n                        type=\"radio\"\r\n                        name=\"payment-method\"\r\n                        id=\"credit-card\"\r\n                        />\r\n                    <FlexContainer direction=\"column\">\r\n                        <Label htmlFor=\"credit-card\">Credit Card</Label>\r\n\r\n                        <InfoText>\r\n                            Safe money transfer using your bank account.\r\n                        </InfoText>\r\n\r\n                        <FlexContainer>\r\n                            <FlexContainer direction=\"column\" margin=\"20px 20px 20px 0\">\r\n                                <InputLabel htmlFor=\"card-number\">Credit card number</InputLabel>\r\n                                <Controller\r\n                                    name=\"cardNumber\"\r\n                                    control={form.control}\r\n                                    render={({ field, fieldState }) => (\r\n                                        <Input \r\n                                            {...field}\r\n                                            id=\"card-number\"\r\n                                        />\r\n                                    )}\r\n                                />\r\n                            </FlexContainer>\r\n                            \r\n                            <FlexContainer direction=\"column\" margin=\"20px 20px 20px 0\">\r\n                                <InputLabel htmlFor=\"card-expiration\">Expiration</InputLabel>\r\n                                <Controller \r\n                                    name=\"cardExpiration\"\r\n                                    control={form.control}\r\n                                    render={({ field }) => (\r\n                                        <Input \r\n                                            {...field}\r\n                                            id=\"card-expiration\"\r\n                                        />\r\n                                    )}\r\n                                />\r\n                            </FlexContainer>\r\n                        </FlexContainer>\r\n                        <FlexContainer>\r\n                            <FlexContainer direction=\"column\" margin=\"20px 20px 20px 0\">\r\n                                <InputLabel htmlFor=\"card-holder\">Cardholder name</InputLabel>\r\n                                <Controller  \r\n                                    name=\"cardHolder\"\r\n                                    control={form.control}\r\n                                    render={({ field }) => (\r\n                                        <Input \r\n                                            {...field}\r\n                                            id=\"card-holder\"\r\n                                        />\r\n                                    )}\r\n                                />\r\n                            </FlexContainer>\r\n                            \r\n                            <FlexContainer align=\"flex-end\" margin=\"20px 20px 20px 0\">\r\n                                <FlexContainer direction=\"column\">\r\n                                    <InputLabel htmlFor=\"card-cvv\">Cvv code</InputLabel>\r\n                                    <Controller \r\n                                        name=\"cardCVV\"\r\n                                        control={form.control}\r\n                                        render={({ field }) => (\r\n                                            <Input\r\n                                                {...field} \r\n                                                id=\"card-cvv\"\r\n                                                width=\"100px\"\r\n                                            />\r\n                                        )}\r\n                                    />\r\n                                </FlexContainer>\r\n                                <Button \r\n                                    margin=\"0 0 0 20px\"\r\n                                    type=\"submit\"\r\n                                    >\r\n                                    Checkout\r\n                                </Button>\r\n                            </FlexContainer>\r\n                        </FlexContainer>\r\n\r\n                    </FlexContainer>\r\n                </Placeholder>\r\n            </Container>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default PaymentMethods;\r\n","import { ThemeProvider } from \"styled-components\";\nimport PaymentMethods from \"./components/PaymentMethods\";\nimport { GlobalStyles } from \"./components/styled\";\n\nconst theme = {\n    colors: {\n        primary: \"#25DAC5\",\n        heading: \"#1E0E62\",\n        text: \"rgba(21, 20, 57, 0.4)\",\n        background: \"#FFFFFF\",\n        border: \"#EBEAED\"\n    }\n}\n\nconst App = () => {\n    return (\n        <ThemeProvider theme={theme}>\n            <GlobalStyles />\n            <PaymentMethods />\n        </ThemeProvider>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);"],"sourceRoot":""}